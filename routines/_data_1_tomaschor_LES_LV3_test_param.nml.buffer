&mpi_param
  use_mpi = .true.,     ! use MPI of not
  nproc = 5             ! number of processors for MPI
/

&output_control
  average_dim_num = 2,		! if==2 then averages over x,y,t, if==1 then averages over y,t
  output_video = .false.,       ! probably anything you want. Bottom of main.f90
  flagVSpl = .false.,		! ???
  flagCSpl = .false.,		! ???
  flag_srfV = .false.,		! output surface velocity individually???
  tt_srfV = 1			! ???
/
&output_sample
/
&domain_param
  nx = 100,		! number of x nodes
  ny = 100,     	! number of y nodes
  nz_tot = 146, 	! number of z nodes + ghost point
  lx = 1000.d0, 	! domain size in x direction
  ly = 1000.d0,		! domain size in y direction
  lz_tot = 300.d0, 	! total height of the simulation
  z_i = 100.d0		! length scale in our LES, used for normalization and setting inversion with prop_mixed
/

&time_param
  nsteps = 1000000,	! total number of timesteps
  dt = 0.1d0,		! dimensional timestep (seconds)
  c_count = 5,		! time step to do the planar average
  p_count = 2000,	! number of timesteps for averaging
  cs_count = 5		! update smagorinsky dynamic coefficient
/

&flow_param
  u_star = 0.0125,	! scaling velocity
  initu = .false.,      ! flag to initialize velocity field (restart the flow field)
  inilag = .true.,      ! flag to initialize eddy viscosity (should be false when restarting the simulation)
  interp = .false.,	! ???
  DYN_init = 300,       ! timestep to start dynamical SGS model (should be zero when restarting the simulation)
  coriolis_forcing = .false.,   ! flag to use coriolis forcing (always false for ocean_flag=.true.)
  freq_coriolis = 7.0E-5,       ! coriolis frequency
  ug_dim = 3.0, ! dimensional geostrophic wind
  vg_dim = 0.0, ! dimensional geostrophic wind
  inflow = .false., ! flag to use prescribed inflow
  jx_s = 50,
  x_relax = 8,
  jx_p = 50,
  x_relaxp = 8,
  use_mean_p_force = .false.,	! whether to use mean pressure gradient force
  ocean_flag = .true.,          ! flag to use ocean setup
  flag_relaxForce = .false.,    ! flag to use relaxation forcing (cellular flow forcing)
/

&temperature_param
  S_FLAG = .true.,      ! flag to use temperature field or not
  initsc = .false.,     ! initialize the concentration field (restart the temperature field)
  SCAL_init = 0,        ! when to start evolving temperature???
  inilag_sc = .false.,	! not used
  inv_strength = 0.010d0,       ! the temperature gradient in inverse layer
  dTdz_top = 0.0d0,             ! temperature gradient at top (for atmosphere) or bottom (for ocean)
  theta_top = 300.d0,	! temperature at the top (probably abandoned)
  T_scale = 300.d0,     ! normalization for temperature
  wt_s = 4.1676e-07,    ! heat flux (units of w*T)
  T_init = 283.15       ! initialization of temperature profile???
/

&ocean_param
  stokes_flag = .true., ! wheter to use stokes drift
  amp_w = 1.6d0,        ! amplitude of surface waves???
  lambda_w = 120.d0,    ! wavelength of surface waves???
  agl_Ust = 0.d0,	! inclined angle of Stokes drift with respect to x-direction (in radians)
  U_PLUME_FLAG = .false., ! not being used
  prop_mixed = 1.d0	! proportion of z_i that is well-mixed
/

&mode_relaxForce
  nmod_cell = 2
/
&relax_force
  u0_cell = 2.d0, 2.d0,
  advU_cell = 0.d0, 0.d0,
  advV_cell = 0.d0, 0.d0,
  tt0_cell = 0,
  wn_cell = 4, 1,
  piPhix_cell = 0.3d0, 0.d0,
  piPhiy_cell = -0.5d0, 0.d0
  t_relax = 21600
  wn_filter = 10,
  type_filter = 'diagonal'
/

&con_param
  n_con = 1,            ! the number of the concentration fields (true number not counting endless)
  pcon_flag = .true.,   ! concentration in the simulation
  initPCon = .false.,   ! read concentration from vel_sc.out the (initialize the concentration field)
  pcon_scale = 1.0,     ! scale use to normalize the concentration
  unit_pconScale = 'molecPcm3', ! unit of pcon_scale, not used in simulation
  pcon_scheme = 3,              ! numerical scheme for concentration
  periodicbcx = .false.,        ! use periodic conditions for concentration field on x
  periodicbcy = .false.,        ! ditto for y
  pcon_init = 1,        ! timestep to initialize the concentration field
  lbcp = 1,             ! if 1, impose oil flux at surface, if 2, impose oil concentration
  pcon_sfc = 500.0,     ! imposed oil concentration at the surface
  sfc_flux = 0.0,       ! imposed flux of oil at surface
  sc = 0.8,             ! schmidt number
  sc_boun = 0.95,       ! schmidt number for the boundaries???
  z_ref = 100.0,	! abandoned!
  settling = .true.,    ! consider particle settling velocity
  pcon_acc = .true.,    ! first order approximation for particle inertia (considering acceleration)
  inflow_pcon = .false.,	! lateral boundary conditions for Pcon ???
  pointsource = .true.,         ! flag to set point source
  single_point = .true.,	! use only one point source ??? (always true apparently)
  ini_src = 1,                  ! initial timestep to set up the source
  end_src = 50000000,           ! final timestep for source
  active_pcon = .false.,        ! treat the concentration field as active scalar
  pconsgs_acc_flag = .false.,   ! include inertial effects of subgrid scale (always false)
  model_psgsacc = 1,		! subgrid inertial effects model
  cs_pa = 1.0e4,		! coefficient for SGS acceleration of particles
  flag_endless = .false.	! whether to use endless
/

&particle_param
  vel_settling = 21.6e-3, !0.0216,        ! settling velocity of the particles
  ratio_dens = 0.8340163,  !0.8340163, ! 859.8708/1031   ! density ratio between particl and fluid
  vol_spec = 1.1629654e-3, !1.1629654e-3 ! 1/859.8708    ! specific volume (reciproc of density)
/

&source
  ix_src=30,	! x position of point source
  iy_src=80,	! y position of point source
  iz_src=73	! z position of point source
/

&endless_param
  flag_cell = .false.
/

&mode_cell
  nmod_cell = 2                 ! number of the mode of the celullar flow
/
&cellular_flow
  u0_cell = 2.d0, 2.d0,         ! velocity scale for celullar flow
  advU_cell = 6.2d0, 6.2d0,     ! phase vel of celullar flow in x-direction
  advV_cell = -5.8d0, -5.8d0,   ! phase vel of celullar flow in y-direction
  tt0_cell = 630000,            ! displacement timestep of the phase of the celullar flow
  dph_cell = 100.d0, 100.d0,    ! depth of celullar flow
  d_cell = 2000.d0, 5600.d0,    ! wavelength of celullar flow
  piPhix_cell = 0.3d0, 0.d0,    ! phase displacement of celullar flow
  piPhiy_cell = -0.5d0, 0.d0    ! phase displacement of celullar flow
/

&chem_param
/

